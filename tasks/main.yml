---
- name: Check required variables
  ansible.builtin.assert:
    that:
      - ct_user is not search("CHANGEME")
      - ct_path is not search("CHANGEME")
  tags: always

- name: "Create {{ ct_path }}"
  ansible.builtin.file:
    path: "{{ ct_path }}"
    state: directory
    mode: "{{ ct_mode_path }}"
    owner: "{{ ct_user }}"
    group: "{{ ct_group }}"
  become: true
  tags: ct

- name: "Get info on {{ ct_user }}"
  ansible.builtin.user:
    name: "{{ ct_user }}"
  register: ct_user_register
  become: true
  tags: ct

- name: Set variables
  ansible.builtin.set_fact:
    ct_uid: "{{ ct_user_register.uid }}"
    ct_gid: "{{ ct_user_register.group }}"
  tags: ct

- name: Copy compose.yaml
  ansible.builtin.copy:
    content: "{{ ct_compose | to_nice_yaml }}"
    dest: "{{ ct_path }}/compose.yaml"
    mode: "{{ ct_mode_compose }}"
    owner: "{{ ct_user }}"
    group: "{{ ct_group }}"
  become: true
  tags: ct
  when: ct_compose != "CHANGEME"

- name: Start/update containers
  ansible.builtin.docker_compose:
    project_src: "{{ ct_path }}"
    pull: "{{ 'ct_update' in ansible_run_tags }}"
  become: true
  tags:
    - never
    - ct_update
    - ct_start
  when: "'ct_start' in ansible_run_tags or 'ct_update' in ansible_run_tags"

- name: Prune everything
  community.docker.docker_prune:
    containers: true
    images: true
    networks: true
    volumes: true
    builder_cache: true
  become: true
  tags:
    - never
    - ct_prune
  when: "'ct_prune' in ansible_run_tags"
